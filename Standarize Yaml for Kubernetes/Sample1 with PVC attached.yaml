apiVersion: v1
kind: PersistentVolume
metadata:
  name: sample1-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample1-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample1
  labels:
    app: sample1
spec:
  selector:
    matchLabels:
      app: sample1
  template:
    metadata:
      labels:
        app: sample1
    spec:
      imagePullSecrets: 
      - name: pullsecret
      volumes:
      - name: sample1-pv
        persistentVolumeClaim:
          claimName: sample1-pv-claim
      containers:
      - name: sample1
        image: example.harbor.com/production/sample1
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        volumeMounts:
        - name: sample1-pv
          mountPath: /tmp/

---

apiVersion: v1
kind: Service
metadata:
  name: sample1
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
  selector:
    app: sample1


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample1-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  tls:
  - hosts:
    - sample1.example.com
    secretName: sample1-tls
  rules:
  - host: "sample1.example.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: sample1
            port:
              number: 3001